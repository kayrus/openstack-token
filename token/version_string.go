// Code generated by "stringer -type Version token/types.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unscoped-0]
	_ = x[DomainScoped-1]
	_ = x[ProjectScoped-2]
	_ = x[TrustScoped-3]
	_ = x[FederatedUnscoped-4]
	_ = x[FederatedProjectScoped-5]
	_ = x[FederatedDomainScoped-6]
	_ = x[OAuthScoped-7]
	_ = x[SystemScoped-8]
	_ = x[ApplicationCredentialScoped-9]
}

const _Version_name = "UnscopedDomainScopedProjectScopedTrustScopedFederatedUnscopedFederatedProjectScopedFederatedDomainScopedOAuthScopedSystemScopedApplicationCredentialScoped"

var _Version_index = [...]uint8{0, 8, 20, 33, 44, 61, 83, 104, 115, 127, 154}

func (i Version) String() string {
	if i < 0 || i >= Version(len(_Version_index)-1) {
		return "Version(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Version_name[_Version_index[i]:_Version_index[i+1]]
}
